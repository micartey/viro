name: Build and Release JAR

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            os-name: linux
          - os: windows-latest
            os-name: windows

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21 (Zulu)
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'zulu'

      - name: Build with Maven
        run: mvn package -B -DskipTests=true -f pom.xml

      - name: Find JAR file
        id: find-jar
        uses: actions/github-script@v5
        with:
          script: |
            const fs = require('fs');
            const files = fs.readdirSync('./target').filter(fn => fn.endsWith('.jar'));
            if (files.length > 0) {
              core.setOutput('jar_name', files[0]);
            } else {
              core.setFailed('No JAR file found');
            }

      - name: Rename JAR file
        run: |
          mv ./target/${{ steps.find-jar.outputs.jar_name }} ./target/${{ matrix.os-name }}-${{ steps.find-jar.outputs.jar_name }}
        shell: bash

      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os-name }}-jar
          path: ./target/${{ matrix.os-name }}-${{ steps.find-jar.outputs.jar_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: ./artifacts # Download and extract artifacts into ./artifacts directory
  
      - name: Get short SHA
        id: short-sha
        run: echo "SHORT_SHA=${GITHUB_SHA:0:7}" >> $GITHUB_ENV
  
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.SHORT_SHA }}
          release_name: Release ${{ env.SHORT_SHA }}
          draft: false
          prerelease: true
  
      - name: Upload Linux JAR to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/linux-${{ steps.short-sha.outputs.SHORT_SHA }}.jar
          asset_name: linux-${{ steps.short-sha.outputs.SHORT_SHA }}.jar
          asset_content_type: application/java-archive
  
      - name: Upload Windows JAR to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/windows-${{ steps.short-sha.outputs.SHORT_SHA }}.jar
          asset_name: windows-${{ steps.short-sha.outputs.SHORT_SHA }}.jar
          asset_content_type: application/java-archive
  
